/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QuanLyTHuVien;

import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author ADMIN
 */
public class GiaoDienChinh extends javax.swing.JFrame {

    /**
     * Creates new form GiaoDienChinh
     */
    DefaultTableModel dtm;
    DefaultTableModel dtmdg;
    DefaultTableModel dtmdgcopy;
    DefaultTableModel dtmmts;
    DefaultTableModel dtmmtscopy;
    DefaultTableModel dtmtks;
    DefaultTableModel dtmqlt;
    DefaultTableModel dtmtkdg;

    Connection conn = null;
    ResultSet rs = null;
    Statement stm = null;

    public GiaoDienChinh() {
        initComponents();
        setVisible(true);
        setLocation(200, 100);
        setTitle("CHƯƠNG TRÌNH QUẢN LÝ SÁCH TRONG THƯ VIỆN TRƯỜNG ĐẠI HỌC CÔNG NGHIỆP HÀ NỘI");
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        txtngaysinh.setToolTipText("yyyy-MM-dd");
        txtidsach.requestFocus();
        dtm = (DefaultTableModel) tbsach.getModel();
        dtmdg = (DefaultTableModel) tbdocgia.getModel();
        dtmdgcopy = (DefaultTableModel) tbdocgia.getModel();
        dtmmts = (DefaultTableModel) tbmuontra.getModel();
        dtmmtscopy = (DefaultTableModel) tbmuontrasachcopy.getModel();
        dtmtks = (DefaultTableModel) tbthongkesach.getModel();
        dtmqlt = (DefaultTableModel) tbthe.getModel();
        dtmtkdg = (DefaultTableModel) tbthongkedocgia.getModel();

    }

    public Connection getConnect() {
        try {
            String url = "jdbc:derby://localhost:1527/QuanLyThuVien";
            String user = "root";
            String pass = "123456";
            Class.forName("org.apache.derby.jdbc.ClientDriver");
            return DriverManager.getConnection(url, user, pass);
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Khong the ket noi voi database \n" + e);
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        buttonGroupQLSach = new javax.swing.ButtonGroup();
        buttonGroupQLDocGia = new javax.swing.ButtonGroup();
        buttonGroupQLMuonTraSach = new javax.swing.ButtonGroup();
        buttonGroupQLThe = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtidsach = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txttensach = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txttacgia = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtsoluong = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txttheloai = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtgiasach = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtnxb = new javax.swing.JTextField();
        btntimkiemsach = new javax.swing.JButton();
        rbtensach = new javax.swing.JRadioButton();
        rbtacgia = new javax.swing.JRadioButton();
        rbtheloai = new javax.swing.JRadioButton();
        btnthemsach = new javax.swing.JButton();
        btnxoasach = new javax.swing.JButton();
        btnsuasach = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbsach = new javax.swing.JTable();
        btnhuysach = new javax.swing.JButton();
        rbgia = new javax.swing.JRadioButton();
        btnhienthibangsach = new javax.swing.JButton();
        rbidsach = new javax.swing.JRadioButton();
        btnthoatsach = new javax.swing.JButton();
        txtvitri = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        rbvitri = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtiddocgia = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txthoten = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtngaysinh = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtdiachi = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtnghenghiep = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtsdt = new javax.swing.JTextField();
        btntimkiemdocgia = new javax.swing.JButton();
        rbhoten = new javax.swing.JRadioButton();
        rbiddocgia = new javax.swing.JRadioButton();
        rbsdt = new javax.swing.JRadioButton();
        btnthemdocgia = new javax.swing.JButton();
        btnsuadocgia = new javax.swing.JButton();
        btnxoadocgia = new javax.swing.JButton();
        btnhuydocgia = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbdocgia = new javax.swing.JTable();
        btnthoatdocgia = new javax.swing.JButton();
        btnhienthidocgia = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtidthe = new javax.swing.JTextField();
        txthotenthe = new javax.swing.JTextField();
        btnthemthe = new javax.swing.JButton();
        btnsuathe = new javax.swing.JButton();
        btnxoathe = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbthe = new javax.swing.JTable();
        btntimkiemthe = new javax.swing.JButton();
        btnhuythe = new javax.swing.JButton();
        btnthoatthe = new javax.swing.JButton();
        rbidthe = new javax.swing.JRadioButton();
        rbhotenthe = new javax.swing.JRadioButton();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtngaycap = new javax.swing.JTextField();
        txthethan = new javax.swing.JTextField();
        btnhienthithe = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtiddocgiaqlmuontra = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txthotenqlmuontra = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtidsachqlmuontra = new javax.swing.JTextField();
        btnthemqlmuontra = new javax.swing.JButton();
        btnsuaqlmuontra = new javax.swing.JButton();
        btnxoaqlmuontra = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txttensachqlmuontra = new javax.swing.JTextField();
        txtngaymuon = new javax.swing.JTextField();
        txtngayhentra = new javax.swing.JTextField();
        txtngaythuctra = new javax.swing.JTextField();
        btntimkiemqlmuontra = new javax.swing.JButton();
        rbiddocgiaqlmuontra = new javax.swing.JRadioButton();
        rbidsachqlmuontra = new javax.swing.JRadioButton();
        btnhuyqlmuontra = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbmuontra = new javax.swing.JTable();
        btnthoatqlmuontra = new javax.swing.JButton();
        btnhienthiqlmuontra = new javax.swing.JButton();
        rbidsachvaiddocgiaqlmuontra = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        btncapnhatthongkesach = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbthongkesach = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        lblthongkesachmuonnhieu = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txttheloaithongkesach = new javax.swing.JTextField();
        lbsoluongsachtheotheloai = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        btnhienthi = new javax.swing.JButton();
        lbltongsosach = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        lblsosachtra = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        lblsosachmuon = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lbtongslsach = new javax.swing.JLabel();
        btnthoatthongkesach = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbmuontrasachcopy = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        txttungay = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        txtdenngay = new javax.swing.JTextField();
        btncapnhatthongkedocgia = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbthongkedocgia = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("ID sách");

        txtidsach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidsachActionPerformed(evt);
            }
        });

        jLabel4.setText("Tên sách");

        jLabel5.setText("Tác giả");

        jLabel1.setText("Số lượng");

        jLabel2.setText("Thể loại");

        jLabel6.setText("Giá sách");

        jLabel7.setText("Nhà xuất bản");

        btntimkiemsach.setBackground(new java.awt.Color(153, 153, 255));
        btntimkiemsach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Search.png"))); // NOI18N
        btntimkiemsach.setText("  Tìm kiếm");
        btntimkiemsach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemsachActionPerformed(evt);
            }
        });

        buttonGroupQLSach.add(rbtensach);
        rbtensach.setText("Theo tên sách");

        buttonGroupQLSach.add(rbtacgia);
        rbtacgia.setText("Theo tác giả");

        buttonGroupQLSach.add(rbtheloai);
        rbtheloai.setText("Theo thể loại");

        btnthemsach.setBackground(new java.awt.Color(153, 153, 255));
        btnthemsach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Create.png"))); // NOI18N
        btnthemsach.setText("  Thêm");
        btnthemsach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemsachActionPerformed(evt);
            }
        });

        btnxoasach.setBackground(new java.awt.Color(153, 153, 255));
        btnxoasach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Trash.png"))); // NOI18N
        btnxoasach.setText("  Xóa");
        btnxoasach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoasachActionPerformed(evt);
            }
        });

        btnsuasach.setBackground(new java.awt.Color(153, 153, 255));
        btnsuasach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Edit.png"))); // NOI18N
        btnsuasach.setText("  Sửa");
        btnsuasach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuasachActionPerformed(evt);
            }
        });

        tbsach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID sách", "Tên sách", "Tác giả", "Số lượng", "Thể loại", "Giá sách", "NXB", "Vị trí"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbsach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbsachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbsach);

        btnhuysach.setBackground(new java.awt.Color(255, 153, 153));
        btnhuysach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Delete.png"))); // NOI18N
        btnhuysach.setText("  Hủy");
        btnhuysach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhuysachActionPerformed(evt);
            }
        });

        buttonGroupQLSach.add(rbgia);
        rbgia.setText("Theo giá");

        btnhienthibangsach.setBackground(new java.awt.Color(153, 153, 255));
        btnhienthibangsach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/List.png"))); // NOI18N
        btnhienthibangsach.setText("  Load All");
        btnhienthibangsach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhienthibangsachActionPerformed(evt);
            }
        });

        buttonGroupQLSach.add(rbidsach);
        rbidsach.setText("ID sách");

        btnthoatsach.setBackground(new java.awt.Color(255, 153, 153));
        btnthoatsach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Exit.png"))); // NOI18N
        btnthoatsach.setText("  Thoát");
        btnthoatsach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthoatsachActionPerformed(evt);
            }
        });

        jLabel37.setText("Vị trí");

        buttonGroupQLSach.add(rbvitri);
        rbvitri.setText("vị trí");
        rbvitri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbvitriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1010, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnhienthibangsach)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnthemsach)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnxoasach)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnsuasach)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btntimkiemsach))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txttensach)
                                    .addComponent(txtidsach)
                                    .addComponent(txttacgia)
                                    .addComponent(txtsoluong, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbtheloai))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(rbidsach)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbtensach)
                                    .addComponent(rbgia))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbvitri)
                                    .addComponent(rbtacgia))
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(btnhuysach)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnthoatsach))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(29, 29, 29)
                                        .addComponent(txtnxb, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel37))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(54, 54, 54)
                                                .addComponent(txtvitri, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtgiasach, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txttheloai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGap(47, 47, 47)))
                        .addGap(51, 51, 51))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtidsach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txttheloai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txttensach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtgiasach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txttacgia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtnxb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtsoluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtvitri, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel37))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnhienthibangsach)
                            .addComponent(btnthemsach)
                            .addComponent(btnxoasach)
                            .addComponent(btnsuasach)
                            .addComponent(btntimkiemsach)
                            .addComponent(btnhuysach)
                            .addComponent(btnthoatsach)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbidsach)
                            .addComponent(rbtensach)
                            .addComponent(rbtacgia))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rbgia)
                                .addComponent(rbtheloai))
                            .addComponent(rbvitri))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Quản lý sách", jPanel1);

        jLabel8.setText("ID độc giả");

        jLabel9.setText("Họ tên");

        jLabel10.setText("Ngày sinh");

        jLabel11.setText("Địa chỉ");

        jLabel12.setText("Nghề nghiệp");

        jLabel13.setText("Số điện thoại");

        btntimkiemdocgia.setBackground(new java.awt.Color(153, 153, 255));
        btntimkiemdocgia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Search.png"))); // NOI18N
        btntimkiemdocgia.setText("   Tìm kiếm");
        btntimkiemdocgia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemdocgiaActionPerformed(evt);
            }
        });

        buttonGroupQLDocGia.add(rbhoten);
        rbhoten.setText("Theo họ tên");

        buttonGroupQLDocGia.add(rbiddocgia);
        rbiddocgia.setText("Theo ID");

        buttonGroupQLDocGia.add(rbsdt);
        rbsdt.setText("Theo SĐT");

        btnthemdocgia.setBackground(new java.awt.Color(153, 153, 255));
        btnthemdocgia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Create.png"))); // NOI18N
        btnthemdocgia.setText("   Thêm");
        btnthemdocgia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemdocgiaActionPerformed(evt);
            }
        });

        btnsuadocgia.setBackground(new java.awt.Color(153, 153, 255));
        btnsuadocgia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Edit.png"))); // NOI18N
        btnsuadocgia.setText("   Sửa");
        btnsuadocgia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuadocgiaActionPerformed(evt);
            }
        });

        btnxoadocgia.setBackground(new java.awt.Color(153, 153, 255));
        btnxoadocgia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Trash.png"))); // NOI18N
        btnxoadocgia.setText("   Xóa");
        btnxoadocgia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoadocgiaActionPerformed(evt);
            }
        });

        btnhuydocgia.setBackground(new java.awt.Color(255, 153, 153));
        btnhuydocgia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Delete.png"))); // NOI18N
        btnhuydocgia.setText("   Hủy");
        btnhuydocgia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhuydocgiaActionPerformed(evt);
            }
        });

        tbdocgia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID độc giả", "Họ tên", "Ngày sinh", "Địa chỉ", "Nghề nghiệp", "Số điện thoại"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbdocgia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbdocgiaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbdocgia);
        if (tbdocgia.getColumnModel().getColumnCount() > 0) {
            tbdocgia.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        btnthoatdocgia.setBackground(new java.awt.Color(255, 153, 153));
        btnthoatdocgia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Log out.png"))); // NOI18N
        btnthoatdocgia.setText("   Thoát");
        btnthoatdocgia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthoatdocgiaActionPerformed(evt);
            }
        });

        btnhienthidocgia.setBackground(new java.awt.Color(153, 153, 255));
        btnhienthidocgia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/List.png"))); // NOI18N
        btnhienthidocgia.setText("   Load All");
        btnhienthidocgia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhienthidocgiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtiddocgia, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                                    .addComponent(txthoten)
                                    .addComponent(txtngaysinh)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(btntimkiemdocgia)
                                .addGap(98, 98, 98)
                                .addComponent(rbiddocgia)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtnghenghiep, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                    .addComponent(txtsdt)
                                    .addComponent(txtdiachi)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(rbhoten)
                                .addGap(36, 36, 36)
                                .addComponent(rbsdt))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnhienthidocgia)
                            .addComponent(btnthemdocgia, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(174, 174, 174)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnsuadocgia)
                            .addComponent(btnxoadocgia, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(129, 129, 129)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnhuydocgia, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnthoatdocgia))))
                .addContainerGap(214, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtiddocgia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtdiachi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txthoten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtnghenghiep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtngaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txtsdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbhoten)
                    .addComponent(rbsdt)
                    .addComponent(btntimkiemdocgia)
                    .addComponent(rbiddocgia))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnhienthidocgia)
                    .addComponent(btnsuadocgia)
                    .addComponent(btnhuydocgia))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnthemdocgia)
                    .addComponent(btnxoadocgia)
                    .addComponent(btnthoatdocgia))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý độc giả", jPanel2);

        jLabel23.setText("ID thẻ");

        jLabel24.setText("Họ tên");

        btnthemthe.setBackground(new java.awt.Color(153, 153, 255));
        btnthemthe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Create.png"))); // NOI18N
        btnthemthe.setText("  Thêm");
        btnthemthe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemtheActionPerformed(evt);
            }
        });

        btnsuathe.setBackground(new java.awt.Color(153, 153, 255));
        btnsuathe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Edit.png"))); // NOI18N
        btnsuathe.setText("  Sửa");
        btnsuathe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuatheActionPerformed(evt);
            }
        });

        btnxoathe.setBackground(new java.awt.Color(153, 153, 255));
        btnxoathe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Trash.png"))); // NOI18N
        btnxoathe.setText("  Xóa");
        btnxoathe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoatheActionPerformed(evt);
            }
        });

        tbthe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID thẻ", "Họ tên", "Ngày cấp", "Hết hạn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbthe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbtheMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbthe);

        btntimkiemthe.setBackground(new java.awt.Color(153, 153, 255));
        btntimkiemthe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Search.png"))); // NOI18N
        btntimkiemthe.setText("  Tìm kiếm");
        btntimkiemthe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemtheActionPerformed(evt);
            }
        });

        btnhuythe.setBackground(new java.awt.Color(255, 153, 153));
        btnhuythe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Delete.png"))); // NOI18N
        btnhuythe.setText("  Hủy");
        btnhuythe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhuytheActionPerformed(evt);
            }
        });

        btnthoatthe.setBackground(new java.awt.Color(255, 153, 153));
        btnthoatthe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Exit.png"))); // NOI18N
        btnthoatthe.setText("  Thoát");
        btnthoatthe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthoattheActionPerformed(evt);
            }
        });

        buttonGroupQLThe.add(rbidthe);
        rbidthe.setText("Theo ID");

        buttonGroupQLThe.add(rbhotenthe);
        rbhotenthe.setText("Theo họ tên");

        jLabel27.setText("Ngày cấp");

        jLabel28.setText("Hết hạn");

        btnhienthithe.setBackground(new java.awt.Color(153, 153, 255));
        btnhienthithe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/List.png"))); // NOI18N
        btnhienthithe.setText("  Load All");
        btnhienthithe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhienthitheActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1026, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnhienthithe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(btnthemthe)
                        .addGap(18, 18, 18)
                        .addComponent(btnsuathe)
                        .addGap(18, 18, 18)
                        .addComponent(btnxoathe)
                        .addGap(12, 12, 12))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtidthe)
                            .addComponent(txthotenthe, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txthethan, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(txtngaycap)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btntimkiemthe)
                        .addGap(18, 18, 18)
                        .addComponent(rbidthe)
                        .addGap(18, 18, 18)
                        .addComponent(rbhotenthe)
                        .addGap(18, 18, 18)
                        .addComponent(btnhuythe)
                        .addGap(18, 18, 18)
                        .addComponent(btnthoatthe)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txtidthe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(txtngaycap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txthotenthe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28)
                    .addComponent(txthethan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnthemthe)
                    .addComponent(btnsuathe)
                    .addComponent(btnxoathe)
                    .addComponent(btnhuythe)
                    .addComponent(btntimkiemthe)
                    .addComponent(btnthoatthe)
                    .addComponent(rbidthe)
                    .addComponent(rbhotenthe)
                    .addComponent(btnhienthithe))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý thẻ thư viện", jPanel3);

        jLabel16.setText("ID độc giả");

        jLabel17.setText("Họ tên");

        jLabel18.setText("ID sách");

        btnthemqlmuontra.setBackground(new java.awt.Color(153, 153, 255));
        btnthemqlmuontra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Create.png"))); // NOI18N
        btnthemqlmuontra.setText("  Thêm");
        btnthemqlmuontra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemqlmuontraActionPerformed(evt);
            }
        });

        btnsuaqlmuontra.setBackground(new java.awt.Color(153, 153, 255));
        btnsuaqlmuontra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Edit.png"))); // NOI18N
        btnsuaqlmuontra.setText("  Sửa");
        btnsuaqlmuontra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaqlmuontraActionPerformed(evt);
            }
        });

        btnxoaqlmuontra.setBackground(new java.awt.Color(153, 153, 255));
        btnxoaqlmuontra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Trash.png"))); // NOI18N
        btnxoaqlmuontra.setText("  Xóa");
        btnxoaqlmuontra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaqlmuontraActionPerformed(evt);
            }
        });

        jLabel19.setText("Tên sách");

        jLabel20.setText("Ngày mượn");

        jLabel21.setText("Ngày hẹn trả");

        jLabel22.setText("Ngày thực trả");

        btntimkiemqlmuontra.setBackground(new java.awt.Color(153, 153, 255));
        btntimkiemqlmuontra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Search.png"))); // NOI18N
        btntimkiemqlmuontra.setText("  Tìm kiếm");
        btntimkiemqlmuontra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemqlmuontraActionPerformed(evt);
            }
        });

        buttonGroupQLMuonTraSach.add(rbiddocgiaqlmuontra);
        rbiddocgiaqlmuontra.setText("Theo ID độc giả");

        buttonGroupQLMuonTraSach.add(rbidsachqlmuontra);
        rbidsachqlmuontra.setText("Theo ID sách");

        btnhuyqlmuontra.setBackground(new java.awt.Color(255, 153, 153));
        btnhuyqlmuontra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Delete.png"))); // NOI18N
        btnhuyqlmuontra.setText("  Hủy");
        btnhuyqlmuontra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhuyqlmuontraActionPerformed(evt);
            }
        });

        tbmuontra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID độc giả", "Họ tên", "ID sách", "Tên sách", "Ngày mượn", "Ngày hẹn trả", "Ngày thực trả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbmuontra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbmuontraMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbmuontra);

        btnthoatqlmuontra.setBackground(new java.awt.Color(255, 153, 153));
        btnthoatqlmuontra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Log out.png"))); // NOI18N
        btnthoatqlmuontra.setText("  Thoát");
        btnthoatqlmuontra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthoatqlmuontraActionPerformed(evt);
            }
        });

        btnhienthiqlmuontra.setBackground(new java.awt.Color(153, 153, 255));
        btnhienthiqlmuontra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/List.png"))); // NOI18N
        btnhienthiqlmuontra.setText("  Load All");
        btnhienthiqlmuontra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhienthiqlmuontraActionPerformed(evt);
            }
        });

        buttonGroupQLMuonTraSach.add(rbidsachvaiddocgiaqlmuontra);
        rbidsachvaiddocgiaqlmuontra.setText("Theo ID sách và id độc giả");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(btnhienthiqlmuontra)
                            .addComponent(jLabel19))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtiddocgiaqlmuontra)
                            .addComponent(txthotenqlmuontra)
                            .addComponent(txtidsachqlmuontra)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(btnthemqlmuontra)
                                .addGap(27, 27, 27)
                                .addComponent(btnsuaqlmuontra)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                .addComponent(btnxoaqlmuontra))
                            .addComponent(txttensachqlmuontra))
                        .addGap(72, 72, 72))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(rbidsachvaiddocgiaqlmuontra)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(btntimkiemqlmuontra))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtngayhentra, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                                .addComponent(txtngaythuctra))
                            .addComponent(txtngaymuon, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(rbiddocgiaqlmuontra)
                        .addGap(18, 18, 18)
                        .addComponent(rbidsachqlmuontra)
                        .addGap(18, 18, 18)
                        .addComponent(btnhuyqlmuontra)
                        .addGap(18, 18, 18)
                        .addComponent(btnthoatqlmuontra)))
                .addContainerGap(80, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addGap(107, 107, 107))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtiddocgiaqlmuontra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel17)
                    .addComponent(txthotenqlmuontra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtngaymuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtngayhentra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(txtidsachqlmuontra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtngaythuctra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(txttensachqlmuontra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnthemqlmuontra)
                    .addComponent(btnsuaqlmuontra)
                    .addComponent(btnxoaqlmuontra)
                    .addComponent(btntimkiemqlmuontra)
                    .addComponent(btnhienthiqlmuontra))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbiddocgiaqlmuontra)
                    .addComponent(rbidsachqlmuontra)
                    .addComponent(btnhuyqlmuontra)
                    .addComponent(rbidsachvaiddocgiaqlmuontra)
                    .addComponent(btnthoatqlmuontra))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý mượn trả sách", jPanel5);

        btncapnhatthongkesach.setBackground(new java.awt.Color(153, 153, 255));
        btncapnhatthongkesach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Edit.png"))); // NOI18N
        btncapnhatthongkesach.setText("  Cập nhật");
        btncapnhatthongkesach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncapnhatthongkesachActionPerformed(evt);
            }
        });

        tbthongkesach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID sách", "Tên sách", "Tác giả", "Số lượng", "Thể loại", "Giá sách", "NXB", "Số lượng mượn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbthongkesach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbthongkesachMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbthongkesach);

        jLabel25.setText("Số lượng sách còn trong thư viện:  ");

        lblthongkesachmuonnhieu.setText("Bảng thống kê sách mượn nhiều:");

        jLabel15.setText("Số lượng sách theo thể loại:");

        lbsoluongsachtheotheloai.setText("0");

        jLabel29.setText("(Cuốn).");

        jLabel30.setText("(Cuốn).");

        btnhienthi.setBackground(new java.awt.Color(153, 153, 255));
        btnhienthi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/List.png"))); // NOI18N
        btnhienthi.setText("  Hiển thị");
        btnhienthi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhienthiActionPerformed(evt);
            }
        });

        lbltongsosach.setText("0");

        jLabel33.setText("(Cuốn).");

        lblsosachtra.setText("0");

        jLabel26.setText("Số lượng sách đã trả: ");

        jLabel34.setText("Số lượng sách đã mượn:");

        lblsosachmuon.setText("0");

        jLabel35.setText("(Cuốn).");

        jLabel36.setText("(Cuốn).");

        jLabel14.setText("Tổng số lượng sách trong thư viện:");

        lbtongslsach.setText("0");

        btnthoatthongkesach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Exit.png"))); // NOI18N
        btnthoatthongkesach.setText("Thoát");
        btnthoatthongkesach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthoatthongkesachActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1016, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(lblthongkesachmuonnhieu)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btncapnhatthongkesach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnthoatthongkesach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(137, 137, 137)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnhienthi)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txttheloaithongkesach, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14)
                    .addComponent(jLabel25))
                .addGap(74, 74, 74)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbsoluongsachtheotheloai, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblsosachtra, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblsosachmuon, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbltongsosach, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbtongslsach, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel14)
                    .addComponent(lbtongslsach)
                    .addComponent(btncapnhatthongkesach))
                .addGap(8, 8, 8)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(lblsosachmuon)
                            .addComponent(jLabel29))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblsosachtra)
                            .addComponent(jLabel30)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(btnthoatthongkesach)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel26)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbltongsosach)
                        .addComponent(jLabel35)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txttheloaithongkesach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbsoluongsachtheotheloai)
                    .addComponent(jLabel36))
                .addGap(18, 18, 18)
                .addComponent(btnhienthi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(lblthongkesachmuonnhieu)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Thống kê sách", jPanel6);

        tbmuontrasachcopy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID độc giả", "Họ tên", "ID sách", "Tên sách", "Ngày mượn", "Ngày hẹn trả", "Ngày thực trả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tbmuontrasachcopy);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(195, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(313, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Bảng lưu thông tin mượn trả sách", jPanel8);

        jLabel31.setText("Bảng thống kế độc giả quá hạn từ ngày(yyyy-MM-dd)");

        jLabel32.setText("đến ngày");

        btncapnhatthongkedocgia.setBackground(new java.awt.Color(153, 153, 255));
        btncapnhatthongkedocgia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QuanLyTHuVien/Hinh/Edit.png"))); // NOI18N
        btncapnhatthongkedocgia.setText("   Cập nhật");
        btncapnhatthongkedocgia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncapnhatthongkedocgiaActionPerformed(evt);
            }
        });

        tbthongkedocgia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID độc giả", "Họ tên", "ID sách", "Tên sách", "Ngày mượn", "Ngày hẹn trả", "Ngày thực trả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tbthongkedocgia);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btncapnhatthongkedocgia)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(18, 18, 18)
                        .addComponent(txttungay, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel32)
                        .addGap(18, 18, 18)
                        .addComponent(txtdenngay, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(txttungay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(txtdenngay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btncapnhatthongkedocgia)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(228, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Thống kê độc giả quá hạn", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 20, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1031, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//========================================QUẢN LÝ SÁCH==================================================
// load data in tbsach
    private void load_DB() {
        try {
            DefaultTableModel modelsach = (DefaultTableModel) tbsach.getModel();
            stm = conn.createStatement();
            modelsach.setRowCount(0);
            ResultSet re = stm.executeQuery("select * from SACH");
            while (re.next()) {
                String id = re.getString("IDSACH");
                String name = re.getString("TENSACH");
                String author = re.getString("TACGIA");
                int number = re.getInt("SOLUONG");
                String type = re.getString("THELOAI");
                double cost = re.getDouble("GIASACH");
                String publisher = re.getString("NHAXUATBAN");
                String gps=re.getString("VITRI");
                modelsach.addRow(new Object[]{
                    id, name, author, number, type, cost, publisher,gps
                });
            }
            conn.close();
        } catch (Exception ex) {
            System.out.println("Error:Not connect SQL derby" + ex.getMessage());
        }
    }
// check box don't input data

    private boolean IsEmpty() {
        if (txtidsach.getText().equals("") || txttensach.getText().equals("") || txttacgia.getText().equals("") || txtsoluong.getText().equals("") || txttheloai.getText().equals("") || txtgiasach.getText().equals("") || txtnxb.getText().equals("")||txtvitri.getText().equals("")) {
            return true;
        }
        return false;
    }
//check type of số lượng
    private boolean Check_Type_SoLuong(){
        if(!Pattern.matches("[0-9]+", txtsoluong.getText())){
            return true;
        }
        return false;
    }
//check type of giá tiền
    private boolean Check_Type_GiaTien(){
        if(!Pattern.matches("[.0-9]+", txtgiasach.getText())){
            return true;
        }
        return false;
    }
// check id is unique
    private boolean IdIsEmpty() {
        String sql_id = "select count(*) from SACH where IDSACH=?";
        try {
            conn = getConnect();
            PreparedStatement pre = conn.prepareStatement(sql_id);
            pre.setString(1, txtidsach.getText());
            ResultSet re = pre.executeQuery();
            if (re.next()) {
                //lấy kết quả ở cột 1
                if (re.getInt(1) != 0) {
                    return true;
                }
            }
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "không tồn tại ID trong bảng", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }
//check radio not selected
    private boolean check_radio() {
        if (!rbidsach.isSelected() && !rbtensach.isSelected() && !rbtacgia.isSelected() && !rbtheloai.isSelected() && !rbgia.isSelected()&&!rbvitri.isSelected()) {
            return true;
        }
        return false;
    }
//add sql
    private void add() {
        if (IsEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Có trường nhập bạn đang để trống", "Thông Báo", JOptionPane.ERROR_MESSAGE);
        } else if (IdIsEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Trùng ID Sách, vui lòng nhập ID Sách khác", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtidsach.requestFocus();
        }else if(Check_Type_SoLuong()){
            JOptionPane.showMessageDialog(rootPane, "Trường nhập số lượng bạn đang nhập sai kiểu dữ liệu, vui luòng kiểm tra lại", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtsoluong.requestFocus();
        } else if(Check_Type_GiaTien()){
            JOptionPane.showMessageDialog(rootPane, "Trường nhập giá sách bạn đang nhập sai kiẻu dữ liệu, vui luòng kiểm tra lại", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtgiasach.requestFocus();
        }
        else {
            conn = getConnect();
            String SQL = "insert into SACH values(?,?,?,?,?,?,?,?)";
            try {
                PreparedStatement pre = conn.prepareStatement(SQL);
                pre.setString(1, txtidsach.getText());
                pre.setString(2, txttensach.getText());
                pre.setString(3, txttacgia.getText());
                pre.setInt(4, Integer.parseInt(txtsoluong.getText()));
                pre.setString(5, txttheloai.getText());
                pre.setDouble(6, Double.parseDouble(txtgiasach.getText()));
                pre.setString(7, txtnxb.getText());
                pre.setString(8, txtvitri.getText());
                pre.executeUpdate();
                load_DB();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Dữ liệu đầu vào không đúng, vui lòng kiểm tra lại", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
//del sql
    private void delete() {
        if (IdIsEmpty()) {
            int res = JOptionPane.showConfirmDialog(rootPane, "Bạn Có muốn xoá không", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (res == JOptionPane.YES_OPTION) {
                conn = getConnect();
                String SQL = "delete from SACH where IDSACH=?";
                try {
                    PreparedStatement pre = conn.prepareStatement(SQL);
                    pre.setString(1, txtidsach.getText());
                    pre.executeUpdate();
                    load_DB();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Xoá không thành công", "Thông báo", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Không tồn tại ID Sách này", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }
//update sql
    private void update() {
        if (IsEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Có thành phần bạn đang để trống", "Thông Báo", JOptionPane.ERROR_MESSAGE);
        }else if(Check_Type_SoLuong()){
            JOptionPane.showMessageDialog(rootPane, "Trường nhập số lượng bạn đang nhập sai kiểu dữ liệu, vui luòng kiểm tra lại", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtsoluong.requestFocus();
        } else if(Check_Type_GiaTien()){
            JOptionPane.showMessageDialog(rootPane, "Trường nhập giá sách bạn đang nhập sai kiẻu dữ liệu, vui luòng kiểm tra lại", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtgiasach.requestFocus();
        } 
        else if (IdIsEmpty()) {
            conn = getConnect();
            String SQL = "update SACH set TENSACH=?,TACGIA=?,SOLUONG=?,THELOAI=?,GIASACH=?,NHAXUATBAN=?,VITRI=? where IDSACH=?";
            try {
                PreparedStatement pre = conn.prepareStatement(SQL);
                pre.setString(8, txtidsach.getText());
                pre.setString(1, txttensach.getText());
                pre.setString(2, txttacgia.getText());
                pre.setInt(3, Integer.parseInt(txtsoluong.getText()));
                pre.setString(4, txttheloai.getText());
                pre.setDouble(5, Double.parseDouble(txtgiasach.getText()));
                pre.setString(6, txtnxb.getText());
                pre.setString(7, txtvitri.getText());
                pre.executeUpdate();
                load_DB();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Dữ liệu cập nhật lỗi so với dữ liệu bảng, vui lòng kiểm tra lại", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Không tồn tại ID Sách này", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }
//search sql
    private void search() {
        conn = getConnect();
        DefaultTableModel modelsach = (DefaultTableModel) tbsach.getModel();
        modelsach.setRowCount(0);
        if (check_radio()) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn kiểu tìm kiếm", "Thông báo", JOptionPane.WARNING_MESSAGE);
        } else if (rbidsach.isSelected()) {
            if (txtidsach.getText().equals("")) {
                JOptionPane.showConfirmDialog(rootPane, "Bạn đang để trống ID để tìm kiếm", "Thông báo", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE);
                txtidsach.requestFocus();
            } else {
                String SQL = "select * from SACH where IDSACH=?";
                try {
                    PreparedStatement pre = conn.prepareStatement(SQL);
                    pre.setString(1, txtidsach.getText());
                    ResultSet re = pre.executeQuery();
                    while (re.next()) {
                        String id = re.getString("IDSACH");
                        String name = re.getString("TENSACH");
                        String author = re.getString("TACGIA");
                        int number = re.getInt("SOLUONG");
                        String type = re.getString("THELOAI");
                        double cost = re.getDouble("GIASACH");
                        String publisher = re.getString("NHAXUATBAN");
                        String gps=re.getString("VITRI");
                        modelsach.addRow(new Object[]{
                            id, name, author, number, type, cost, publisher,gps
                        });
                    }
                    conn.close();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Dữ liệu không tồn tại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } else if (rbtensach.isSelected()) {
            if (txttensach.getText().equals("")) {
                JOptionPane.showConfirmDialog(rootPane, "Bạn đang để trống tên sách để tìm kiếm", "Thông báo", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE);
                txttensach.requestFocus();
            } else {
                String SQL = "select * from SACH where TENSACH=?";
                try {
                    PreparedStatement pre = conn.prepareStatement(SQL);
                    pre.setString(1, txttensach.getText());
                    ResultSet re = pre.executeQuery();
                    while (re.next()) {
                        String id = re.getString("IDSACH");
                        String name = re.getString("TENSACH");
                        String author = re.getString("TACGIA");
                        int number = re.getInt("SOLUONG");
                        String type = re.getString("THELOAI");
                        double cost = re.getDouble("GIASACH");
                        String publisher = re.getString("NHAXUATBAN");
                        String gps=re.getString("VITRI");
                        modelsach.addRow(new Object[]{
                            id, name, author, number, type, cost, publisher,gps
                        });
                    }
                    conn.close();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Dữ liệu không tồn tại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } else if (rbtacgia.isSelected()) {
            if (txttacgia.getText().equals("")) {
                JOptionPane.showConfirmDialog(rootPane, "Bạn đang để trống tên tác giả để tìm kiếm", "Thông báo", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE);
                txttacgia.requestFocus();
            } else {
                String SQL = "select * from SACH where TACGIA=?";
                try {
                    PreparedStatement pre = conn.prepareStatement(SQL);
                    pre.setString(1, txttacgia.getText());
                    ResultSet re = pre.executeQuery();
                    while (re.next()) {
                        String id = re.getString("IDSACH");
                        String name = re.getString("TENSACH");
                        String author = re.getString("TACGIA");
                        int number = re.getInt("SOLUONG");
                        String type = re.getString("THELOAI");
                        double cost = re.getDouble("GIASACH");
                        String publisher = re.getString("NHAXUATBAN");
                        String gps=re.getString("VITRI");
                        modelsach.addRow(new Object[]{
                            id, name, author, number, type, cost, publisher,gps
                        });
                    }
                    conn.close();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Dữ liệu không tồn tại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } else if (rbtheloai.isSelected()) {
            if (txttheloai.getText().equals("")) {
                JOptionPane.showConfirmDialog(rootPane, "Bạn đang để trống thể loại để tìm kiếm", "Thông báo", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE);
                txttheloai.requestFocus();
            } else {
                String SQL = "select * from SACH where THELOAI=?";
                try {
                    PreparedStatement pre = conn.prepareStatement(SQL);
                    pre.setString(1, txttheloai.getText());
                    ResultSet re = pre.executeQuery();
                    while (re.next()) {
                        String id = re.getString("IDSACH");
                        String name = re.getString("TENSACH");
                        String author = re.getString("TACGIA");
                        int number = re.getInt("SOLUONG");
                        String type = re.getString("THELOAI");
                        double cost = re.getDouble("GIASACH");
                        String publisher = re.getString("NHAXUATBAN");
                        String gps=re.getString("VITRI");
                        modelsach.addRow(new Object[]{
                            id, name, author, number, type, cost, publisher,gps
                        });
                    }
                    conn.close();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Dữ liệu không tồn tại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } else if (rbgia.isSelected()) {
            if (txtgiasach.getText().equals("")) {
                JOptionPane.showConfirmDialog(rootPane, "Bạn đang để trống giá sách để tìm kiếm", "Thông báo", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE);
                txtgiasach.requestFocus();
            } else {
                String SQL = "select * from SACH where GIASACH=?";
                try {
                    PreparedStatement pre = conn.prepareStatement(SQL);
                    pre.setString(1, txtgiasach.getText());
                    ResultSet re = pre.executeQuery();
                    while (re.next()) {
                        String id = re.getString("IDSACH");
                        String name = re.getString("TENSACH");
                        String author = re.getString("TACGIA");
                        int number = re.getInt("SOLUONG");
                        String type = re.getString("THELOAI");
                        double cost = re.getDouble("GIASACH");
                        String publisher = re.getString("NHAXUATBAN");
                        String gps=re.getString("VITRI");
                        modelsach.addRow(new Object[]{
                            id, name, author, number, type, cost, publisher,gps
                        });
                    }
                    conn.close();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Dữ liệu không tồn tại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } else if(rbvitri.isSelected()){
            if(txtvitri.getText().equals("")){
                JOptionPane.showConfirmDialog(rootPane, "Bạn đang để trống vị trí để tìm kiếm", "Thông báo", JOptionPane.OK_OPTION, JOptionPane.INFORMATION_MESSAGE);
                txtvitri.requestFocus();
            }else {
                String SQL = "select * from SACH where VITRI=?";
                try {
                    PreparedStatement pre = conn.prepareStatement(SQL);
                    pre.setString(1, txtvitri.getText());
                    ResultSet re = pre.executeQuery();
                    while (re.next()) {
                        String id = re.getString("IDSACH");
                        String name = re.getString("TENSACH");
                        String author = re.getString("TACGIA");
                        int number = re.getInt("SOLUONG");
                        String type = re.getString("THELOAI");
                        double cost = re.getDouble("GIASACH");
                        String publisher = re.getString("NHAXUATBAN");
                        String gps=re.getString("VITRI");
                        modelsach.addRow(new Object[]{
                            id, name, author, number, type, cost, publisher,gps
                        });
                    }
                    conn.close();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Dữ liệu không tồn tại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }
    private void btnhienthibangsachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhienthibangsachActionPerformed
        conn = getConnect();
        load_DB();
    }//GEN-LAST:event_btnhienthibangsachActionPerformed

    private void btnxoasachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoasachActionPerformed
        delete();
    }//GEN-LAST:event_btnxoasachActionPerformed

    private void btnthemsachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemsachActionPerformed
        add();
    }//GEN-LAST:event_btnthemsachActionPerformed

    private void btntimkiemsachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemsachActionPerformed
        search();
    }//GEN-LAST:event_btntimkiemsachActionPerformed

    private void btnsuasachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuasachActionPerformed
        update();
    }//GEN-LAST:event_btnsuasachActionPerformed

    private void tbsachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbsachMouseClicked
        int row = tbsach.getSelectedRow();
        String idSach = (String) tbsach.getValueAt(row, 0);
        String tenSach = (String) tbsach.getValueAt(row, 1);
        String tacGia = (String) tbsach.getValueAt(row, 2);
        int soLuong = (int) tbsach.getValueAt(row, 3);
        String theLoai = (String) tbsach.getValueAt(row, 4);
        double giaSach = (double) tbsach.getValueAt(row, 5);
        String nhaXuatBan = (String) tbsach.getValueAt(row, 6);
        String vitri=(String) tbsach.getValueAt(row, 7);
        txtidsach.setText(idSach);
        txttensach.setText(tenSach);
        txttacgia.setText(tacGia);
        txtsoluong.setText(soLuong + "");
        txttheloai.setText(theLoai);
        txtgiasach.setText(giaSach + "");
        txtnxb.setText(nhaXuatBan);
        txtvitri.setText(vitri);
    }//GEN-LAST:event_tbsachMouseClicked

    private void btnthoatsachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthoatsachActionPerformed
        int res = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn thoát không", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (res == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnthoatsachActionPerformed

    private void btnhuysachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhuysachActionPerformed
        txtidsach.setText("");
        txttensach.setText("");
        txttacgia.setText("");
        txtsoluong.setText("");
        txttheloai.setText("");
        txtgiasach.setText("");
        txtnxb.setText("");
        txtvitri.setText("");
    }//GEN-LAST:event_btnhuysachActionPerformed

//===========================================QUẢN LÝ ĐỘC GIẢ=================================================

    private void btnhienthidocgiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhienthidocgiaActionPerformed
        try {
            conn = getConnect();
            DefaultTableModel model = (DefaultTableModel) tbdocgia.getModel();
            model.setRowCount(0);
            stm = conn.createStatement();
            String sql = "SELECT *FROM DOCGIA";
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                String idDocGia = rs.getString("IDDOCGIA");
                String hoTen = rs.getString("HOTEN");
                Date ngaySinh = rs.getDate("NGAYSINH");
                String diaChi = rs.getString("DIACHI");
                String ngheNghiep = rs.getString("NGHENGHIEP");
                String soDienThoai = rs.getString("SODIENTHOAI");
                model.addRow(new Object[]{
                    idDocGia, hoTen, ngaySinh, diaChi, ngheNghiep, soDienThoai
                });
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnhienthidocgiaActionPerformed

    private void btnthemdocgiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemdocgiaActionPerformed
        Connection conn = null;
        Statement stmt = null;
        if (txtiddocgia.getText().equals("") || txthoten.getText().equals("") || txtngaysinh.getText().equals("") || txtdiachi.getText().equals("") || txtnghenghiep.getText().equals("") || txtsdt.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa điền đủ thông tin","Lỗi" , JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            conn = getConnect();
            stmt = conn.createStatement();
            //Kiểm tra id sách phải nằm trong bảng sách:
            String sqlKTIDDocGia = "Select * From docgia";
            ResultSet rs1 = stmt.executeQuery(sqlKTIDDocGia);
            int demKhacIDDocGia = 0;
            while (rs1.next()) {
                if (txtiddocgia.getText().equals(rs1.getString(1))) {
                    demKhacIDDocGia++;
                }
            }
            if (demKhacIDDocGia > 0) {
                JOptionPane.showMessageDialog(rootPane, "Độc giả này đã tồn tại ","Lỗi" , JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                String sqlThem = "Insert Into docgia Values('" + txtiddocgia.getText() + "', '" + txthoten.getText() + "', '" + txtngaysinh.getText() + "', '" + txtdiachi.getText() + "', '" + txtnghenghiep.getText() + "', '" + txtsdt.getText() + "')";
                int numberRowsAffected = stmt.executeUpdate(sqlThem);
            }
            String sqlXuat = "Select * From docgia";
            ResultSet rs = stmt.executeQuery(sqlXuat);
            while (rs.next()) {
                String[] columns = new String[6];
                columns[0] = rs.getString(1);
                columns[1] = rs.getString(2);
                columns[2] = rs.getString(3);
                columns[3] = rs.getString(4);
                columns[4] = rs.getString(5);
                columns[5] = rs.getString(6);
                dtmdg.addRow(columns);
            }
            int soHang1 = dtmdgcopy.getRowCount() - 1;
            for (int i = soHang1; i >= 0; i--) {
                dtmdgcopy.removeRow(i);
            }
            String sqlHienThiAllCopy = "Select * From docgia";
            ResultSet rs5 = stmt.executeQuery(sqlHienThiAllCopy);
            while (rs5.next()) {
                String[] columns = new String[6];
                columns[0] = rs5.getString(1);
                columns[1] = rs5.getString(2);
                columns[2] = rs5.getString(3);
                columns[3] = rs5.getString(4);
                columns[4] = rs5.getString(5);
                columns[5] = rs5.getString(6);
                dtmdgcopy.addRow(columns);
            }
            rs.close();
            stmt.close();
            conn.close();
            JOptionPane.showMessageDialog(rootPane, "Thêm độc giả thành công");
        } catch (SQLException se) {
            JOptionPane.showMessageDialog(rootPane, "Định dạng dữ liệu không đúng","Lỗi" , JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnthemdocgiaActionPerformed

    private void tbdocgiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbdocgiaMouseClicked
        int row = tbdocgia.getSelectedRow();
        txtiddocgia.setText((String) dtmdg.getValueAt(row, 0));
        txthoten.setText((String) dtmdg.getValueAt(row, 1));
        txtngaysinh.setText(String.valueOf(dtmdg.getValueAt(row, 2)));
        txtdiachi.setText((String) dtmdg.getValueAt(row, 3));
        txtnghenghiep.setText((String) dtmdg.getValueAt(row, 4));
        txtsdt.setText((String) dtmdg.getValueAt(row, 5));
    }//GEN-LAST:event_tbdocgiaMouseClicked

    private void btnsuadocgiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuadocgiaActionPerformed
        Connection conn = null;
        Statement stmt = null;
        if (txtiddocgia.getText().equals("") || txthoten.getText().equals("") || txtngaysinh.getText().equals("") || txtdiachi.getText().equals("") || txtnghenghiep.getText().equals("") || txtsdt.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa điền đủ thông tin","Cảnh báo" , JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            conn = getConnect();
            stmt = conn.createStatement();
            String sqlSua = "Update docgia Set iddocgia='" + txtiddocgia.getText() + "',hoTen='" + txthoten.getText() + "', ngaysinh='" + txtngaysinh.getText() + "', diachi='" + txtdiachi.getText() + "', nghenghiep='" + txtnghenghiep.getText() + "', sodienthoai='" + txtsdt.getText() + "' Where idDocGia='" + txtiddocgia.getText() + "'";
            stmt.executeUpdate(sqlSua);
            int index = dtmdg.getRowCount() - 1;
            for (int i = index; i >= 0; i--) {
                dtmdg.removeRow(i);
            }
            String sqlXuat = "Select * From docgia";
            ResultSet rs = stmt.executeQuery(sqlXuat);
            while (rs.next()) {
                String[] columns = new String[6];
                columns[0] = rs.getString(1);
                columns[1] = rs.getString(2);
                columns[2] = rs.getString(3);
                columns[3] = rs.getString(4);
                columns[4] = rs.getString(5);
                columns[5] = rs.getString(6);
                dtmdg.addRow(columns);

            }
            rs.close();
            stmt.close();
            conn.close();
            JOptionPane.showMessageDialog(rootPane, "Sửa độc giả thành công");
        } catch (SQLException se) {
            se.printStackTrace();
        }
    }//GEN-LAST:event_btnsuadocgiaActionPerformed

    private void btnxoadocgiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoadocgiaActionPerformed
        Connection conn = null;
        Statement stmt = null;
        try {
            conn = getConnect();
            stmt = conn.createStatement();
            String sqlXoa = "Delete From docgia Where idDocGia='" + txtiddocgia.getText() + "'";

            int click = JOptionPane.showConfirmDialog(rootPane, "Bạn chắc chắn muốn xóa");
            if (click == JOptionPane.YES_OPTION) {
                stmt.executeUpdate(sqlXoa);
            }
            int index = dtmdg.getRowCount() - 1;
            for (int i = index; i >= 0; i--) {
                dtmdg.removeRow(i);
            }
            String sqlXuat = "Select * From docgia";
            ResultSet rs = stmt.executeQuery(sqlXuat);
            while (rs.next()) {
                String[] columns = new String[6];
                columns[0] = rs.getString(1);
                columns[1] = rs.getString(2);
                columns[2] = rs.getString(3);
                columns[3] = rs.getString(4);
                columns[4] = rs.getString(5);
                columns[5] = rs.getString(6);
                dtmdg.addRow(columns);
            }
            rs.close();
            stmt.close();
            conn.close();
            JOptionPane.showMessageDialog(rootPane, "Xóa độc giả thành công");
        } catch (SQLException se) {
            se.printStackTrace();
        }
    }//GEN-LAST:event_btnxoadocgiaActionPerformed

    private void btntimkiemdocgiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemdocgiaActionPerformed
        Connection conn = null;
        Statement stmt = null;
        if (rbiddocgia.isSelected() && txtiddocgia.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Nhập ID muốn tìm","Cảnh báo" , JOptionPane.WARNING_MESSAGE);
        } else if (rbhoten.isSelected() && txthoten.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Nhập tên muốn tìm","Cảnh báo" , JOptionPane.WARNING_MESSAGE);
        } else if(rbsdt.isSelected() && txtsdt.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nhập số điện thoại muốn tìm","Cảnh báo" , JOptionPane.WARNING_MESSAGE);
        }
        else if (!rbiddocgia.isSelected() && !rbhoten.isSelected() && !rbsdt.isSelected()) {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn tiêu chí để tìm kiếm","Lỗi" , JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                conn = getConnect();
                stmt = conn.createStatement();
                if (rbiddocgia.isSelected() && !txtiddocgia.getText().equals("")) {
                    String sqlTimKiemTheoIDDG = "Select * From docgia Where idDocGia like '%" + txtiddocgia.getText() + "%'";
                    ResultSet rs = stmt.executeQuery(sqlTimKiemTheoIDDG);
                    int index = dtmdg.getRowCount() - 1;
                    for (int i = index; i >= 0; i--) {
                        dtmdg.removeRow(i);
                    }
                    while (rs.next()) {
                        String[] columns = new String[6];
                        columns[0] = rs.getString(1);
                        columns[1] = rs.getString(2);
                        columns[2] = rs.getString(3);
                        columns[3] = rs.getString(4);
                        columns[4] = rs.getString(5);
                        columns[5] = rs.getString(6);
                        dtmdg.addRow(columns);
                    }
                    rs.close();
                    if (dtmdg.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không có độc giả nào có mã này","Lỗi" , JOptionPane.ERROR_MESSAGE);
                    }
                } else if (rbhoten.isSelected() && !txthoten.getText().equals("")) {
                    String sqlTimKiemTheoHoTen = "Select * From docgia Where hoten like '%" + txthoten.getText() + "%'";
                    ResultSet rs = stmt.executeQuery(sqlTimKiemTheoHoTen);
                    int index = dtmdg.getRowCount() - 1;
                    for (int i = index; i >= 0; i--) {
                        dtmdg.removeRow(i);
                    }
                    while (rs.next()) {
                        String[] columns = new String[6];
                        columns[0] = rs.getString(1);
                        columns[1] = rs.getString(2);
                        columns[2] = rs.getString(3);
                        columns[3] = rs.getString(4);
                        columns[4] = rs.getString(5);
                        columns[5] = rs.getString(6);
                        dtmdg.addRow(columns);
                    }
                    rs.close();
                    if (dtmdg.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không có độc giả nào có tên này","Lỗi" , JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    String sqlTimKiemTheoSDT = "Select * From docgia Where sodienthoai like '%" + txtsdt.getText() + "%'";
                    ResultSet rs = stmt.executeQuery(sqlTimKiemTheoSDT);
                    int index = dtmdg.getRowCount() - 1;
                    for (int i = index; i >= 0; i--) {
                        dtmdg.removeRow(i);
                    }
                    while (rs.next()) {
                        String[] columns = new String[6];
                        columns[0] = rs.getString(1);
                        columns[1] = rs.getString(2);
                        columns[2] = rs.getString(3);
                        columns[3] = rs.getString(4);
                        columns[4] = rs.getString(5);
                        columns[5] = rs.getString(6);
                        dtmdg.addRow(columns);
                    }
                    rs.close();
                    if (dtmdg.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không có độc giả nào có só điện thoại này","Lỗi" , JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }//GEN-LAST:event_btntimkiemdocgiaActionPerformed

    private void btnhuydocgiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhuydocgiaActionPerformed
        txtiddocgia.setText("");
        txthoten.setText("");
        txtngaysinh.setText("");
        txtnghenghiep.setText("");
        txtsdt.setText("");
        txtdiachi.setText("");
    }//GEN-LAST:event_btnhuydocgiaActionPerformed

    private void btnthoatdocgiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthoatdocgiaActionPerformed
        int click = JOptionPane.showConfirmDialog(rootPane, "Bạn chắc chắn muốn thoát");
        if (click == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnthoatdocgiaActionPerformed

//=================================QUẢN LÝ MƯỢN TRẢ SÁCH=================================================

    private void btnhienthiqlmuontraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhienthiqlmuontraActionPerformed

        try {
            conn = getConnect();
            DefaultTableModel model = (DefaultTableModel) tbmuontra.getModel();
            model.setRowCount(0);
            stm = conn.createStatement();
            String sql = "SELECT *FROM MUONTRASACH";
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                String idDocGia = rs.getString("IDDOCGIA");
                String hoTen = rs.getString("HOTEN");
                String idSach = rs.getString("IDSACH");
                String tenSach = rs.getString("TENSACH");
                Date ngayMuon = rs.getDate("NGAYMUON");
                Date ngayHenTra = rs.getDate("NGAYHENTRA");
                Date ngayThucTra = rs.getDate("NGAYTHUCTRA");
                model.addRow(new Object[]{
                    idDocGia, hoTen, idSach, tenSach, ngayMuon, ngayHenTra, ngayThucTra
                });
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnhienthiqlmuontraActionPerformed

    private void btnthemqlmuontraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemqlmuontraActionPerformed
        Connection conn = null;
        Statement stmt = null;

        if (txtiddocgiaqlmuontra.getText().equals("") || txthotenqlmuontra.getText().equals("") || txtidsachqlmuontra.getText().equals("") || txttensachqlmuontra.getText().equals("") || txtngaymuon.getText().equals("") || txtngayhentra.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Không được để trống các trường!");
            return;
        }
        try {
            conn = getConnect();
            stmt = conn.createStatement();
            //Kiểm tra id sách phải nằm trong bảng sách:
            String sqlKTIDSach = "Select * From sach";
            ResultSet rs0 = stmt.executeQuery(sqlKTIDSach);
            int demIDSach = 0;
            while (rs0.next()) {
                if (txtidsachqlmuontra.getText().equals(rs0.getString(1))) {
                    demIDSach++;
                }
            }
            int soHangSach = dtm.getRowCount();
            if (demIDSach == 0) {
                JOptionPane.showMessageDialog(rootPane, "Mã sách phải nằm trong bảng sách!");
                return;
            }
            //Kiểm tra id độc giả phải nằm trong bảng độc giả:
            String sqlKTIDDocGia = "Select * From docgia";
            ResultSet rs1 = stmt.executeQuery(sqlKTIDDocGia);
            int demKhacIDDocGia = 0;
            while (rs1.next()) {
                if (!txtiddocgiaqlmuontra.getText().equals(rs1.getString(1))) {
                    demKhacIDDocGia++;
                }
            }
            int soHangDocGia = dtmdg.getRowCount();
            if (demKhacIDDocGia == soHangDocGia) {
                JOptionPane.showMessageDialog(rootPane, "Mã độc giả phải nằm trong bảng độc giả!");
                return;
            }
            //Thêm:              
            String sqlSelectDG = "Select * From docgia";
            ResultSet rs4 = stmt.executeQuery(sqlSelectDG);
            while (rs4.next()) {
                if (txtiddocgiaqlmuontra.getText().equals(rs4.getString(1)) && txthotenqlmuontra.getText().equals(rs4.getString(2))) {
                    String sqlSelectMTS = "Select * From muontrasach";
                    ResultSet rs2 = stmt.executeQuery(sqlSelectMTS);
                    while (rs2.next()) {
                        if (txtiddocgiaqlmuontra.getText().equals(rs2.getString(1)) && txtidsachqlmuontra.getText().equals(rs2.getString(3))) {
                            JOptionPane.showMessageDialog(rootPane, "Trùng mã độc giả và mã sách!");
                            return;
                        }
                    }

                    String sqlSelectSoLuongTheoIDSach = "Select * From sach Where idSach='" + txtidsachqlmuontra.getText() + "'";
                    ResultSet rs6 = stmt.executeQuery(sqlSelectSoLuongTheoIDSach);
                    int soLuong = 0;
                    while (rs6.next()) {
                        soLuong += Integer.parseInt(rs6.getString(4));
                    }
                    if (soLuong < 1) {
                        JOptionPane.showMessageDialog(rootPane, "Sách này đã được mượn hết!");
                        return;
                    }
                    //Kiểm soát: ngày mượn <= ngày hẹn trả <= ngày thực trả
                    if (!txtngaythuctra.getText().equals("")) {
                        Date dateNgayMuon = new SimpleDateFormat("yyyy-MM-dd").parse(txtngaymuon.getText());
                        Date dateNgayHenTra = new SimpleDateFormat("yyyy-MM-dd").parse(txtngayhentra.getText());
                        Date dateNgayThucTra = new SimpleDateFormat("yyyy-MM-dd").parse(txtngaythuctra.getText());
                        if (dateNgayHenTra.compareTo(dateNgayMuon) < 0) {
                            JOptionPane.showMessageDialog(rootPane, "Ngày hẹn trả phải >= ngày mượn!");
                            return;
                        } else if (dateNgayThucTra.compareTo(dateNgayHenTra) < 0) {
                            JOptionPane.showMessageDialog(rootPane, "Ngày thực trả phải >= ngày hẹn trả!");
                            return;
                        }
                    } else if (txtngaythuctra.getText().equals("")) {
                        Date dateNgayMuon = new SimpleDateFormat("yyyy-MM-dd").parse(txtngaymuon.getText());
                        Date dateNgayHenTra = new SimpleDateFormat("yyyy-MM-dd").parse(txtngayhentra.getText());
                        if (dateNgayHenTra.compareTo(dateNgayMuon) < 0) {
                            JOptionPane.showMessageDialog(rootPane, "Ngày hẹn trả phải >= ngày mượn!");
                            return;
                        }
                    }
                    //Thêm:
                    String sqlSelectSach = "Select * From sach";
                    ResultSet rs3 = stmt.executeQuery(sqlSelectSach);
                    while (rs3.next()) {
                        if (txtidsachqlmuontra.getText().equals(rs3.getString(1)) && txttensachqlmuontra.getText().equals(rs3.getString(2))) {
                            if (!txtngaythuctra.getText().equals("")) {
                                String sqlThem = "Insert Into muontrasach Values('" + txtiddocgiaqlmuontra.getText() + "', '" + txthotenqlmuontra.getText() + "', '" + txtidsachqlmuontra.getText() + "', '" + txttensachqlmuontra.getText() + "', '" + txtngaymuon.getText() + "', '" + txtngayhentra.getText() + "', '" + txtngaythuctra.getText() + "')";
                                int numberRowsAffected = stmt.executeUpdate(sqlThem);
                                String sqlThemCopy = "Insert Into muontrasachcopy Values('" + txtiddocgiaqlmuontra.getText() + "', '" + txthotenqlmuontra.getText() + "', '" + txtidsachqlmuontra.getText() + "', '" + txttensachqlmuontra.getText() + "', '" + txtngaymuon.getText() + "', '" + txtngayhentra.getText() + "', '" + txtngaythuctra.getText() + "')";
                                int numberRowsAffectedCopy = stmt.executeUpdate(sqlThemCopy);
                                if (numberRowsAffected == 0) {
                                    System.out.println("Insert failed...");
                                } else {
                                    System.out.println("Insert successfully...");
                                    JOptionPane.showMessageDialog(rootPane, "Thêm thông tin mượn trả thành công!");
                                }
                            } else if (txtngaythuctra.getText().equals("")) {
                                String sqlThem1 = "Insert Into muontrasach Values('" + txtiddocgiaqlmuontra.getText() + "', '" + txthotenqlmuontra.getText() + "', '" + txtidsachqlmuontra.getText() + "', '" + txttensachqlmuontra.getText() + "', '" + txtngaymuon.getText() + "', '" + txtngayhentra.getText() + "', null)";
                                int numberRowsAffected1 = stmt.executeUpdate(sqlThem1);
                                String sqlThem1Copy = "Insert Into MUONTRASACHCOPY Values('" + txtiddocgiaqlmuontra.getText() + "', '" + txthotenqlmuontra.getText() + "', '" + txtidsachqlmuontra.getText() + "', '" + txttensachqlmuontra.getText() + "', '" + txtngaymuon.getText() + "', '" + txtngayhentra.getText() + "', null)";
                                int numberRowsAffected1Copy = stmt.executeUpdate(sqlThem1Copy);
                                if (numberRowsAffected1 == 0) {
                                    System.out.println("Insert failed...");
                                } else {
                                    System.out.println("Insert successfully...");
                                    JOptionPane.showMessageDialog(rootPane, "Thêm thông tin mượn trả thành công!");
                                }
                            }
                            String sqlUpdateSoLuongSachTheoID = "Update sach Set soLuong=soLuong-1 Where idSach='" + txtidsachqlmuontra.getText() + "'";
                            stmt.executeUpdate(sqlUpdateSoLuongSachTheoID);
                            int soHang = dtmmts.getRowCount() - 1;
                            for (int i = soHang; i >= 0; i--) {
                                dtmmts.removeRow(i);
                            }
                            String sqlHienThiAll = "Select * From muontrasach";
                            ResultSet rs = stmt.executeQuery(sqlHienThiAll);
                            while (rs.next()) {
                                String[] columns = new String[7];
                                columns[0] = rs.getString(1);
                                columns[1] = rs.getString(2);
                                columns[2] = rs.getString(3);
                                columns[3] = rs.getString(4);
                                columns[4] = rs.getString(5);
                                columns[5] = rs.getString(6);
                                columns[6] = rs.getString(7);
                                dtmmts.addRow(columns);
                            }
                            int soHang1 = dtmmtscopy.getRowCount() - 1;
                            for (int i = soHang1; i >= 0; i--) {
                                dtmmtscopy.removeRow(i);
                            }
                            String sqlHienThiAllCopy = "Select * From muontrasachcopy";
                            ResultSet rs5 = stmt.executeQuery(sqlHienThiAllCopy);
                            while (rs5.next()) {
                                String[] columns = new String[7];
                                columns[0] = rs5.getString(1);
                                columns[1] = rs5.getString(2);
                                columns[2] = rs5.getString(3);
                                columns[3] = rs5.getString(4);
                                columns[4] = rs5.getString(5);
                                columns[5] = rs5.getString(6);
                                columns[6] = rs5.getString(7);
                                dtmmtscopy.addRow(columns);
                            }
                            rs.close();
                            rs5.close();
                            stmt.close();
                            conn.close();
                            return;
                        }
                    }
                    JOptionPane.showMessageDialog(rootPane, "Tên sách không hợp lệ với mã sách!");
                    return;
                }
            }
            JOptionPane.showMessageDialog(rootPane, "Họ tên độc giả không hợp lệ với mã độc giả!");
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se1) {
                se1.printStackTrace();
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se2) {
                se2.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnthemqlmuontraActionPerformed


    private void btnsuaqlmuontraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaqlmuontraActionPerformed
        Connection conn = null;
        Statement stmt = null;
        if (txtiddocgiaqlmuontra.getText().equals("") || txthotenqlmuontra.getText().equals("") || txtidsachqlmuontra.getText().equals("") || txttensachqlmuontra.getText().equals("") || txtngaymuon.getText().equals("") || txtngayhentra.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Không được để trống các trường!");
            return;
        }
        try {
            conn = getConnect();
            stmt = conn.createStatement();
            if (!txtngaythuctra.getText().equals("")) {
                String sqlSua = "Update muontrasach Set hoTen='" + txthotenqlmuontra.getText() + "', tenSach='" + txttensachqlmuontra.getText() + "', ngayMuon='" + txtngaymuon.getText() + "', NGAYHENTRA='" + txtngayhentra.getText() + "', ngayThucTra='" + txtngaythuctra.getText() + "' Where idDocGia='" + txtiddocgiaqlmuontra.getText() + "' And idSach='" + txtidsachqlmuontra.getText() + "'";
                stmt.executeUpdate(sqlSua);
                String sqlSuaCopy = "Update muontrasachcopy Set hoTen='" + txthotenqlmuontra.getText() + "', tenSach='" + txttensachqlmuontra.getText() + "', ngayMuon='" + txtngaymuon.getText() + "', NGAYHENTRA='" + txtngayhentra.getText() + "', ngayThucTra='" + txtngaythuctra.getText() + "' Where idDocGia='" + txtiddocgiaqlmuontra.getText() + "' And idSach='" + txtidsachqlmuontra.getText() + "'";
                stmt.executeUpdate(sqlSuaCopy);
            } else if (txtngaythuctra.getText().equals("")) {
                String sqlSua = "Update muontrasach Set hoTen='" + txthotenqlmuontra.getText() + "', tenSach='" + txttensachqlmuontra.getText() + "', ngayMuon='" + txtngaymuon.getText() + "', NGAYHENTRA='" + txtngayhentra.getText() + "', ngayThucTra=null Where idDocGia='" + txtiddocgiaqlmuontra.getText() + "' And idSach='" + txtidsachqlmuontra.getText() + "'";
                stmt.executeUpdate(sqlSua);
                String sqlSuaCopy = "Update muontrasachcopy Set hoTen='" + txthotenqlmuontra.getText() + "', tenSach='" + txttensachqlmuontra.getText() + "', ngayMuon='" + txtngaymuon.getText() + "', NGAYHENTRA='" + txtngayhentra.getText() + "', ngayThucTra=null Where idDocGia='" + txtiddocgiaqlmuontra.getText() + "' And idSach='" + txtidsachqlmuontra.getText() + "'";
                stmt.executeUpdate(sqlSuaCopy);
            }
            int soHang = dtmmts.getRowCount() - 1;
            for (int i = soHang; i >= 0; i--) {
                dtmmts.removeRow(i);
            }
            String sqlHienThiAll = "Select * From muontrasach";
            ResultSet rs = stmt.executeQuery(sqlHienThiAll);
            while (rs.next()) {
                String[] columns = new String[7];
                columns[0] = rs.getString(1);
                columns[1] = rs.getString(2);
                columns[2] = rs.getString(3);
                columns[3] = rs.getString(4);
                columns[4] = rs.getString(5);
                columns[5] = rs.getString(6);
                columns[6] = rs.getString(7);
                dtmmts.addRow(columns);
            }
            int soHang1 = dtmmtscopy.getRowCount() - 1;
            for (int i = soHang1; i >= 0; i--) {
                dtmmtscopy.removeRow(i);
            }
            String sqlHienThiAllCopy = "Select * From muontrasachcopy";
            ResultSet rs5 = stmt.executeQuery(sqlHienThiAllCopy);
            while (rs5.next()) {
                String[] columns = new String[7];
                columns[0] = rs5.getString(1);
                columns[1] = rs5.getString(2);
                columns[2] = rs5.getString(3);
                columns[3] = rs5.getString(4);
                columns[4] = rs5.getString(5);
                columns[5] = rs5.getString(6);
                columns[6] = rs5.getString(7);
                dtmmtscopy.addRow(columns);
            }
            JOptionPane.showMessageDialog(rootPane, "Sửa thông tin mượn trả thành công!");

            //Cập nhật lại số lượng sách nếu sửa ngày thực trả !null
            String sqlSelectNgayThucTra = "Select * From muontrasach";
            ResultSet rs1 = stmt.executeQuery(sqlSelectNgayThucTra);
            while (rs1.next()) {
                if (!(String.valueOf(rs1.getString(7)).equals("null"))) {
                    String sqlUpdateSoLuongSach = "Update sach Set soLuong=soLuong+1 Where idSach='" + txtidsachqlmuontra.getText() + "'";
                    stmt.executeUpdate(sqlUpdateSoLuongSach);
                    String sqlDeleteSachTra = "Delete From muontrasach Where idDocGia='" + txtiddocgiaqlmuontra.getText() + "' And idSach='" + txtidsachqlmuontra.getText() + "'";
                    stmt.executeUpdate(sqlDeleteSachTra);
                    for (int i = soHang; i >= 0; i--) {
                        if (dtmmts.getValueAt(i, 0).equals(txtiddocgiaqlmuontra.getText()) && dtmmts.getValueAt(i, 2).equals(txtidsachqlmuontra.getText())) {
                            dtmmts.removeRow(i);
                        }
                    }
                    rs1.close();
                    return;
                }
            }
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se1) {
                se1.printStackTrace();
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se2) {
                se2.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnsuaqlmuontraActionPerformed

    private void tbmuontraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbmuontraMouseClicked
        int row = tbmuontra.getSelectedRow();
        String idDocGia = (String) dtmmts.getValueAt(row, 0);
        String hoTen = (String) dtmmts.getValueAt(row, 1);
        String idSach = (String) dtmmts.getValueAt(row, 2);
        String tenSach = (String) dtmmts.getValueAt(row, 3);
        String ngayMuon = dtmmts.getValueAt(row, 4).toString();
        String ngayHenTra = dtmmts.getValueAt(row, 5).toString();
        String ngayThucTra = (String) dtmmts.getValueAt(row, 6);

        txtiddocgiaqlmuontra.setText(idDocGia);
        txthotenqlmuontra.setText(hoTen);
        txtidsachqlmuontra.setText(idSach);
        txttensachqlmuontra.setText(tenSach);
        txtngaymuon.setText(ngayMuon);
        txtngayhentra.setText(ngayHenTra);
        txtngaythuctra.setText(ngayThucTra);
    }//GEN-LAST:event_tbmuontraMouseClicked

    private void btnxoaqlmuontraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaqlmuontraActionPerformed
        Connection conn = null;
        Statement stmt = null;

        if (rbiddocgiaqlmuontra.isSelected() == false && rbidsachqlmuontra.isSelected() == false && rbidsachvaiddocgiaqlmuontra.isSelected() == false) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng chọn vào RadioButton để xóa!");
        } else {
            try {
                conn = getConnect();
                stmt = conn.createStatement();
                String sqlXoaTheoIDDG = "Delete From muontrasach Where idDocGia='" + txtiddocgiaqlmuontra.getText() + "'";
                String sqlXoaTheoIDSach = "Delete From muontrasach Where idSach='" + txtidsachqlmuontra.getText() + "'";
                String sqlXoaTheoIDSachVaIDDocGia = "Delete From muontrasach Where idSach='" + txtidsachqlmuontra.getText() + "' And idDocGia='" + txtiddocgiaqlmuontra.getText() + "'";
                int kt = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc chắn muốn xóa thông tin này không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                if (rbiddocgiaqlmuontra.isSelected() && !txtiddocgiaqlmuontra.getText().equals("")) {
                    if (kt == 0) {
                        stmt.executeUpdate(sqlXoaTheoIDDG);
                    }
                } else if (rbiddocgiaqlmuontra.isSelected() && txtiddocgiaqlmuontra.getText().equals("")) {
                    if (kt == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không được để trống trường id độc giả");
                    }
                } else if (rbidsachqlmuontra.isSelected() && !txtidsachqlmuontra.getText().equals("")) {
                    if (kt == 0) {
                        stmt.executeUpdate(sqlXoaTheoIDSach);
                    }
                } else if (rbidsachqlmuontra.isSelected() && txtidsachqlmuontra.getText().equals("")) {
                    if (kt == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không được để trống trường id sách");
                    }
                } else if (rbidsachvaiddocgiaqlmuontra.isSelected() && !txtidsachqlmuontra.getText().equals("") && !txtiddocgiaqlmuontra.getText().equals("")) {
                    if (kt == 0) {
                        stmt.executeUpdate(sqlXoaTheoIDSachVaIDDocGia);
                    }
                } else if (rbidsachvaiddocgiaqlmuontra.isSelected() && txtidsachqlmuontra.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Không được để trống trường id sách!");
                } else if (rbidsachvaiddocgiaqlmuontra.isSelected() && txtiddocgiaqlmuontra.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Không được để trống trường id độc giả!");
                }
                int soHang = dtmmts.getRowCount() - 1;
                for (int i = soHang; i >= 0; i--) {
                    dtmmts.removeRow(i);
                }
                String sqlHienThiAll = "Select * From muontrasach";
                ResultSet rs = stmt.executeQuery(sqlHienThiAll);
                while (rs.next()) {
                    String[] columns = new String[7];
                    columns[0] = rs.getString(1);
                    columns[1] = rs.getString(2);
                    columns[2] = rs.getString(3);
                    columns[3] = rs.getString(4);
                    columns[4] = rs.getString(5);
                    columns[5] = rs.getString(6);
                    columns[6] = rs.getString(7);
                    dtmmts.addRow(columns);
                }
                rs.close();
                stmt.close();
                conn.close();
            } catch (SQLException se) {
                se.printStackTrace();
            } catch (Exception ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (stmt != null) {
                        stmt.close();
                    }
                } catch (SQLException se1) {
                    se1.printStackTrace();
                }
                try {
                    if (conn != null) {
                        conn.close();
                    }
                } catch (SQLException se2) {
                    se2.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnxoaqlmuontraActionPerformed

    private void btnhuyqlmuontraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhuyqlmuontraActionPerformed
        txtiddocgiaqlmuontra.setText("");
        txthotenqlmuontra.setText("");
        txtidsachqlmuontra.setText("");
        txttensachqlmuontra.setText("");
        txtngaymuon.setText("");
        txtngayhentra.setText("");
        txtngaythuctra.setText("");
    }//GEN-LAST:event_btnhuyqlmuontraActionPerformed

    private void btnthoatqlmuontraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthoatqlmuontraActionPerformed
        int kt = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc chắn muốn xóa thông tin này không?", "Thông báo", JOptionPane.YES_NO_OPTION);
        if (kt == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnthoatqlmuontraActionPerformed

    private void btntimkiemqlmuontraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemqlmuontraActionPerformed
        Connection conn = null;
        Statement stmt = null;

        if (!rbiddocgiaqlmuontra.isSelected() && !rbidsachqlmuontra.isSelected() && !rbidsachvaiddocgiaqlmuontra.isSelected()) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng chọn RadioButton để tìm kiếm!");
        } else {
            try {
                conn = getConnect();
                stmt = conn.createStatement();
                if (rbiddocgiaqlmuontra.isSelected() && !txtiddocgiaqlmuontra.getText().equals("")) {
                    String sqlTimKiemTheoIDDG = "Select * From muontrasach Where idDocGia like '%" + txtiddocgiaqlmuontra.getText() + "' or idDocGia like '" + txtiddocgiaqlmuontra.getText() + "%'";
                    ResultSet rs = stmt.executeQuery(sqlTimKiemTheoIDDG);
                    int soHang = dtmmts.getRowCount() - 1;
                    for (int i = soHang; i >= 0; i--) {
                        dtmmts.removeRow(i);
                    }
                    while (rs.next()) {
                        String[] columns = new String[7];
                        columns[0] = rs.getString(1);
                        columns[1] = rs.getString(2);
                        columns[2] = rs.getString(3);
                        columns[3] = rs.getString(4);
                        columns[4] = rs.getString(5);
                        columns[5] = rs.getString(6);
                        columns[6] = rs.getString(7);
                        dtmmts.addRow(columns);
                    }
                    if (dtmmts.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không  có thông tin mà bạn cần tìm!");
                    }
                    rs.close();
                } else if (rbiddocgiaqlmuontra.isSelected() && txtiddocgiaqlmuontra.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Không được để trống trường id độc giả!");
                } else if (rbidsachqlmuontra.isSelected() && !txtidsachqlmuontra.getText().equals("")) {
                    String sqlTimKiemTheoIDSach = "Select * From muontrasach Where idSach like '%" + txtidsachqlmuontra.getText() + "' or idSach like '" + txtidsachqlmuontra.getText() + "%'";
                    ResultSet rs = stmt.executeQuery(sqlTimKiemTheoIDSach);
                    int soHang = dtmmts.getRowCount() - 1;
                    for (int i = soHang; i >= 0; i--) {
                        dtmmts.removeRow(i);
                    }
                    while (rs.next()) {
                        String[] columns = new String[7];
                        columns[0] = rs.getString(1);
                        columns[1] = rs.getString(2);
                        columns[2] = rs.getString(3);
                        columns[3] = rs.getString(4);
                        columns[4] = rs.getString(5);
                        columns[5] = rs.getString(6);
                        columns[6] = rs.getString(7);
                        dtmmts.addRow(columns);
                    }
                    rs.close();
                    if (dtmmts.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không  có thông tin mà bạn cần tìm!");
                    }
                } else if (rbidsachqlmuontra.isSelected() && txtidsachqlmuontra.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Không được để trống trường id sách!");
                } else if (rbidsachvaiddocgiaqlmuontra.isSelected() && !txtidsachqlmuontra.getText().equals("") && !txtiddocgiaqlmuontra.getText().equals("")) {
                    String sqlTimKiemTheoIDSachVaIDDocGia = "Select * From muontrasach Where idSach='" + txtidsachqlmuontra.getText() + "' And idDocGia='" + txtiddocgiaqlmuontra.getText() + "'";
                    ResultSet rs = stmt.executeQuery(sqlTimKiemTheoIDSachVaIDDocGia);
                    int soHang = dtmmts.getRowCount() - 1;
                    for (int i = soHang; i >= 0; i--) {
                        dtmmts.removeRow(i);
                    }
                    while (rs.next()) {
                        String[] columns = new String[7];
                        columns[0] = rs.getString(1);
                        columns[1] = rs.getString(2);
                        columns[2] = rs.getString(3);
                        columns[3] = rs.getString(4);
                        columns[4] = rs.getString(5);
                        columns[5] = rs.getString(6);
                        columns[6] = rs.getString(7);
                        dtmmts.addRow(columns);
                    }
                    rs.close();
                    if (dtmmts.getRowCount() == 0) {
                        JOptionPane.showMessageDialog(rootPane, "Không  có thông tin mà bạn cần tìm!");
                    }
                } else if (rbidsachvaiddocgiaqlmuontra.isSelected() && txtidsachqlmuontra.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Không được để trống trường id sách!");
                } else if (rbidsachvaiddocgiaqlmuontra.isSelected() && txtiddocgiaqlmuontra.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Không được để trống trường id độc giả!");
                }
                stmt.close();
                conn.close();
            } catch (SQLException se) {
                se.printStackTrace();
            } catch (Exception ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (stmt != null) {
                        stmt.close();
                    }
                } catch (SQLException se1) {
                    se1.printStackTrace();
                }
                try {
                    if (conn != null) {
                        conn.close();
                    }
                } catch (SQLException se2) {
                    se2.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btntimkiemqlmuontraActionPerformed

    private void btncapnhatthongkesachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncapnhatthongkesachActionPerformed
        lblthongkesachmuonnhieu.setText("Bảng thống kê sách mượn nhiều:");
        capnhat();
    }//GEN-LAST:event_btncapnhatthongkesachActionPerformed
//==============================================QUẢN LÝ THẺ THƯ VIỆN================================================================

    public void loadDataQLThe() {
        try {
            dtmqlt.setRowCount(0);
            stm = conn.createStatement();
            String q = "SELECT * FROM THETHUVIEN";
            ResultSet rs = stm.executeQuery(q);
            while (rs.next()) {
                String idThe = rs.getString("idThe");
                String hoTen = rs.getString("hoTen");
                Date ngayCap = rs.getDate("ngayCap");
                Date ngayHetHan = rs.getDate("ngayHetHan");
                dtmqlt.addRow(new Object[]{
                    idThe, hoTen, ngayCap, ngayHetHan
                });
            }
            conn.close();
        } catch (Exception e) {
            System.out.println("Có lỗi xảy ra!!! " + e.getMessage());
        }
    }

    public boolean validateInputFormQLThe() {
        if (txtidthe.getText().equals("") || txthotenthe.getText().equals("") || txtngaycap.getText().equals("")
                || txthethan.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Không được để trống các trường!");
            return false;
        }
        return true;
    }

    public boolean validateDate() {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date ngayCap = sdf.parse(txtngaycap.getText());
            Date ngayHetHan = sdf.parse(txthethan.getText());
            if (ngayCap.compareTo(ngayHetHan) >= 0) {
                throw new Exception("Ngày cấp phải trước ngày hết hạn!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
            return false;
        }
        return true;
    }

    public boolean checkExistID() {
        try {
            String existID = "SELECT count(*) FROM THETHUVIEN WHERE idThe= ?";
            PreparedStatement ps = conn.prepareStatement(existID);
            ps.setString(1, txtidthe.getText());
            ResultSet r = ps.executeQuery();
            if (r.next()) {
                if (r.getInt(1) != 0) {
                    return true;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
        return false;
    }

    private void btnhienthitheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhienthitheActionPerformed
        conn = getConnect();
        loadDataQLThe();
    }//GEN-LAST:event_btnhienthitheActionPerformed

    private void btnthemtheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemtheActionPerformed
        conn = getConnect();
        //dữ liệu đầu vào không được để trống
        if (!validateInputFormQLThe()) {
            return;
        }
        // kiểm tra id có trong db không?
        if (checkExistID()) {
            JOptionPane.showMessageDialog(rootPane, "ID thẻ đã tồn tại không thể thêm!");
            return;
        }
        // Định dạng ngày
        if (!validateDate()) {
            return;
        }
        //Thêm dữ liệu
        String sql = "INSERT INTO THETHUVIEN(idThe,hoTen,ngayCap,ngayHetHan) VALUES(?,?,?,?)";
        try {
            PreparedStatement pre = conn.prepareStatement("insert into THETHUVIEN values (?,?,?,?)");
            pre.setString(1, txtidthe.getText());
            pre.setString(2, txthotenthe.getText());
            pre.setString(3, txtngaycap.getText());
            pre.setString(4, txthethan.getText());
            pre.executeUpdate();
            loadDataQLThe();
            conn.close();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Dữ liệu nhập vào không hợp lệ \n"
                    + "Định dạng ngày: Năm-Tháng-Ngày");
        }
    }//GEN-LAST:event_btnthemtheActionPerformed

    private void btnsuatheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuatheActionPerformed
        conn = getConnect();
        //dữ liệu vào không thể trống
        if (!validateInputFormQLThe()) {
            return;
        }
        // kiểm tra id
        if (!checkExistID()) {
            JOptionPane.showMessageDialog(rootPane, "ID thẻ không tồn tại không thể sửa!");
            return;
        }
        // định dạng ngày
        if (!validateDate()) {
            return;
        }
        //Sửa
        String sql = "UPDATE THETHUVIEN SET hoTen=?," + "ngayCap=?," + "ngayHetHan=?" + "WHERE idThe=?";
        try {
            PreparedStatement pre = conn.prepareStatement("update THETHUVIEN set hoTen=?,ngayCap=?,ngayHetHan=? where idThe=?");
            pre.setString(4, txtidthe.getText());
            pre.setString(1, txthotenthe.getText());
            pre.setString(2, txtngaycap.getText());
            pre.setString(3, txthethan.getText());
            pre.executeUpdate();
            loadDataQLThe();
            conn.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Dữ liệu nhập vào không hợp lệ \n"
                    + "Định dạng ngày: Năm-Tháng-Ngày");
        }
    }//GEN-LAST:event_btnsuatheActionPerformed

    private void btnxoatheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoatheActionPerformed
        conn = getConnect();
        int dl = JOptionPane.showConfirmDialog(rootPane, "Bạn chắc chắn muốn xóa");
        if (dl == JOptionPane.NO_OPTION || dl == JOptionPane.CANCEL_OPTION) {
            return;
        }
        //kiểm tra id
        if (!checkExistID()) {
            JOptionPane.showMessageDialog(rootPane, "ID thẻ không tồn tại không thể xóa!");
            return;
        }
        //xóa
        String sql = "DELETE FROM THETHUVIEN WHERE idThe=?";
        try {
            PreparedStatement pre = conn.prepareStatement("DELETE FROM THETHUVIEN WHERE idThe=?");
            pre.setString(1, txtidthe.getText());
            pre.executeUpdate();
            loadDataQLThe();
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnxoatheActionPerformed

    private void tbtheMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbtheMouseClicked
        int row = tbthe.getSelectedRow();
        String idthe = (String) tbthe.getValueAt(row, 0);
        String hoten = (String) tbthe.getValueAt(row, 1);
        String ngaycap = tbthe.getValueAt(row, 2).toString();
//        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); 
//        String ngaycap = dateFormat.format(tbthe.getValueAt(row, 2));
        String hethan = tbthe.getValueAt(row, 3).toString();
//        String hethan = dateFormat.format(tbthe.getValueAt(row, 3));
        txtidthe.setText(idthe);
        txthotenthe.setText(hoten);
        txtngaycap.setText(ngaycap);
        txthethan.setText(hethan);
    }//GEN-LAST:event_tbtheMouseClicked

    private void btntimkiemtheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemtheActionPerformed
        conn = getConnect();
        if (!rbidthe.isSelected() && !rbhotenthe.isSelected()) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng chọn RadioButton để tìm kiếm!");
            return;
        }
        dtmqlt.setRowCount(0);
        if (rbidthe.isSelected()) {
            if (txtidthe.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập ID thẻ!");
                return;
            }
            String sql = "SELECT * FROM THETHUVIEN WHERE idTHE=?";
            try {
                PreparedStatement pre = conn.prepareStatement("SELECT * FROM THETHUVIEN WHERE idTHE=?");
                pre.setString(1, txtidthe.getText());
                ResultSet rs = pre.executeQuery();
                while (rs.next()) {
                    String idThe = rs.getString("idThe");
                    String hoTen = rs.getString("hoTen");
                    Date ngayCap = rs.getDate("ngayCap");
                    Date ngayHetHan = rs.getDate("ngayHetHan");

                    dtmqlt.addRow(new Object[]{
                        idThe, hoTen, ngayCap, ngayHetHan
                    });
                }
                if (dtmqlt.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy dữ liệu!");
                    return;
                }
                conn.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage());
            } finally {
                return;
            }
        }
        if (txthotenthe.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập họ tên thẻ!");
            return;
        }
        String sql = "SELECT * FROM THETHUVIEN WHERE hoTen =?";
        try {
            PreparedStatement pre = conn.prepareStatement("SELECT * FROM THETHUVIEN WHERE hoTen =?");
            pre.setString(1, txthotenthe.getText());
            ResultSet rs = pre.executeQuery();
            while (rs.next()) {
                String idThe = rs.getString("idThe");
                String hoTen = rs.getString("hoTen");
                Date ngayCap = rs.getDate("ngayCap");
                Date ngayHetHan = rs.getDate("ngayHetHan");

                dtmqlt.addRow(new Object[]{
                    idThe, hoTen, ngayCap, ngayHetHan
                });
            }
            if (dtmqlt.getRowCount() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Không tìm thấy dữ liệu!");
                return;
            }
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btntimkiemtheActionPerformed

    private void btnhuytheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhuytheActionPerformed
        txtidthe.setText("");
        txthotenthe.setText("");
        txtngaycap.setText("");
        txthethan.setText("");
    }//GEN-LAST:event_btnhuytheActionPerformed

    private void btnthoattheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthoattheActionPerformed
        int exit = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc chắn muốn xóa thông tin này không?", "Thông báo", JOptionPane.YES_NO_OPTION);
        if (exit == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnthoattheActionPerformed

//===================================================THỐNG KÊ ĐỘC GIẢ QUÁ HẠN======================================================
    private void btncapnhatthongkedocgiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncapnhatthongkedocgiaActionPerformed
        Connection conn = null;
        Statement stmt = null;
        try {
            conn = getConnect();
            stmt = conn.createStatement();

            if (txttungay.getText().equals("") || txtdenngay.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Không được để trống các trường!");
            } else {
                Date minn = new SimpleDateFormat("yyyy-MM-dd").parse(txttungay.getText());
                Date maxx = new SimpleDateFormat("yyyy-MM-dd").parse(txtdenngay.getText());
                String sql = "select * from muontrasachcopy";
                ResultSet rs = stmt.executeQuery(sql);
                int soHang = dtmtkdg.getRowCount() - 1;
                for (int i = soHang; i >= 0; i--) {
                    dtmtkdg.removeRow(i);
                }
                while (rs.next()) {
                    Date ngaymuon = new SimpleDateFormat("yyyy-MM-dd").parse(rs.getString(5));
                    Date ngayhentra = new SimpleDateFormat("yyyy-MM-dd").parse(rs.getString(6));
                    Date ngaythuctra = null;
                    long millis = System.currentTimeMillis();
                    java.sql.Date date = new java.sql.Date(millis);
                    if (null == rs.getString(7)) {
                        ngaythuctra = date;
                    } else {
                        ngaythuctra = new SimpleDateFormat("yyyy-MM-dd").parse(rs.getString(7));
                    }
                    if (ngaymuon.compareTo(minn) >= 0 && ngaymuon.compareTo(maxx) <= 0 && ngaythuctra.compareTo(ngayhentra) > 0) {
                        String[] columns = new String[7];
                        columns[0] = rs.getString(1);
                        columns[1] = rs.getString(2);
                        columns[2] = rs.getString(3);
                        columns[3] = rs.getString(4);
                        columns[4] = rs.getString(5);
                        columns[5] = rs.getString(6);
                        columns[6] = rs.getString(7);
                        dtmtkdg.addRow(columns);
                    }
                }
                rs.close();
            }
            stmt.close();
            conn.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException se1) {
                se1.printStackTrace();
            }
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException se2) {
                se2.printStackTrace();
            }
        }
    }//GEN-LAST:event_btncapnhatthongkedocgiaActionPerformed

    private void txtidsachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidsachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidsachActionPerformed

//===================================================THỐNG KÊ SÁCH================================================================

    private void btnhienthiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhienthiActionPerformed
        // TODO add your handling code here:
        lblthongkesachmuonnhieu.setText("Bảng thống kê sách theo thể loại");
        //lấy thể loại sách có trong textfield
        String theLoai = txttheloaithongkesach.getText();
        if (theLoai.equals("")) {
            JOptionPane.showMessageDialog(this, "textfield không được để trống", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            //hiển thị các sách có thể loại trùng với thể loại trong textfield ra bảng
            try {
                conn = getConnect();
                DefaultTableModel model = (DefaultTableModel) tbthongkesach.getModel();
                model.setRowCount(0);
                stm = conn.createStatement();
              
                //đếm số sách theo thể loại
                String sql = "SELECT COUNT(*)FROM SACH WHERE THELOAI='" + theLoai + "'";
                ResultSet rs = stm.executeQuery(sql);
                int count = 0;
                while (rs.next()) {
                    count = rs.getInt(1);
                };
                lbsoluongsachtheotheloai.setText(String.valueOf(count));
                //hiển thị danh sách ra màn hình
                rs = stm.executeQuery("SELECT * FROM SACH WHERE THELOAI= '" + theLoai + "'");
                while (rs.next()) {
                    String idSach = rs.getString("IDSACH");
                    String tenSach = rs.getString("TENSACH");
                    String tacGia = rs.getString("TACGIA");
                    int soLuong = rs.getInt("SOLUONG");
                    theLoai = rs.getString("THELOAI");
                    Double giaSach = rs.getDouble("GIASACH");
                    String nhaXuatBan = rs.getString("NHAXUATBAN");
                    model.addRow(new Object[]{
                        idSach, tenSach, tacGia, soLuong, theLoai, giaSach, nhaXuatBan
                    });
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnhienthiActionPerformed

    private void tbthongkesachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbthongkesachMouseClicked
        int row = tbthongkesach.getSelectedRow();
        //lấy thể loại của dòng dữ liệu được chọn cho vào textfield
        String theLoai = (String) dtmtks.getValueAt(row, 4);
        txttheloaithongkesach.setText(theLoai);
    }//GEN-LAST:event_tbthongkesachMouseClicked

    private void rbvitriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbvitriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbvitriActionPerformed

    private void btnthoatthongkesachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthoatthongkesachActionPerformed
        int i = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn thoát không", "Xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (i == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnthoatthongkesachActionPerformed
    public void capnhat() {
        conn = getConnect();
        try {
            DefaultTableModel model = (DefaultTableModel) tbthongkesach.getModel();
            model.setRowCount(0);
            stm = conn.createStatement();
            //tính số lượng sách còn lại
            String ts = "SELECT sum(soLuong) FROM SACH";
            int tongSach = 0;
            ResultSet rs = stm.executeQuery(ts);
            while (rs.next()) {
                tongSach = rs.getInt(1);
            }
            rs.close();
            lbltongsosach.setText(String.valueOf(tongSach));
            //tính tổng số lượng sách được mươn trong bảng MUONTRASACH
            String smuon = "SELECT COUNT(*) FROM MUONTRASACHCOPY";
            rs = stm.executeQuery(smuon);
            int sachMuon = 0;
            while (rs.next()) {
                sachMuon = rs.getInt(1);
            }
            rs.close();
            lblsosachmuon.setText(String.valueOf(sachMuon));
            //tính số lượng sách đã trả          
            SimpleDateFormat fm = new SimpleDateFormat("yyyy-MM-dd");
            Date date = new Date();
            String stra = "SELECT COUNT(*) FROM MUONTRASACHCOPY WHERE NGAYTHUCTRA<'" + fm.format(date) + "'";
            rs = stm.executeQuery(stra);
            int sachTra = 0;
            while (rs.next()) {
                sachTra = rs.getInt(1);
            }
            rs.close();
            lblsosachtra.setText(String.valueOf(sachTra));   
            
            //tính tổng số sách của thư viện:
            lbtongslsach.setText(String.valueOf(tongSach - sachTra+ sachMuon));

            //hiển thị các sach được mượn nhiều
            rs = stm.executeQuery("SELECT * FROM SACH ");
            while (rs.next()) {
                String idSach = rs.getString("IDSACH");
                String tenSach = rs.getString("TENSACH");
                String tacGia = rs.getString("TACGIA");
                int soLuong = rs.getInt("SOLUONG");
                String theLoai = rs.getString("THELOAI");
                Double giaSach = rs.getDouble("GIASACH");
                String nhaXuatBan = rs.getString("NHAXUATBAN");
                //tính số lượng mượn
                int count = 0;
                try {
                    Statement stm2 = conn.createStatement();
                    String sl = "SELECT COUNT(*)FROM MUONTRASACH WHERE MUONTRASACH.IDSACH= '" + idSach + "'";
                    ResultSet rs1 = stm2.executeQuery(sl);
                    while (rs1.next()) {
                        count = rs1.getInt(1);
                    }
                } catch (Exception e) {
                    System.out.println("Lỗi!" + e);
                }
                if (count == 0) {
                    continue;
                }
                model.addRow(new Object[]{
                    idSach, tenSach, tacGia, soLuong, theLoai, giaSach, nhaXuatBan, count
                });
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncapnhatthongkedocgia;
    private javax.swing.JButton btncapnhatthongkesach;
    private javax.swing.JButton btnhienthi;
    private javax.swing.JButton btnhienthibangsach;
    private javax.swing.JButton btnhienthidocgia;
    private javax.swing.JButton btnhienthiqlmuontra;
    private javax.swing.JButton btnhienthithe;
    private javax.swing.JButton btnhuydocgia;
    private javax.swing.JButton btnhuyqlmuontra;
    private javax.swing.JButton btnhuysach;
    private javax.swing.JButton btnhuythe;
    private javax.swing.JButton btnsuadocgia;
    private javax.swing.JButton btnsuaqlmuontra;
    private javax.swing.JButton btnsuasach;
    private javax.swing.JButton btnsuathe;
    private javax.swing.JButton btnthemdocgia;
    private javax.swing.JButton btnthemqlmuontra;
    private javax.swing.JButton btnthemsach;
    private javax.swing.JButton btnthemthe;
    private javax.swing.JButton btnthoatdocgia;
    private javax.swing.JButton btnthoatqlmuontra;
    private javax.swing.JButton btnthoatsach;
    private javax.swing.JButton btnthoatthe;
    private javax.swing.JButton btnthoatthongkesach;
    private javax.swing.JButton btntimkiemdocgia;
    private javax.swing.JButton btntimkiemqlmuontra;
    private javax.swing.JButton btntimkiemsach;
    private javax.swing.JButton btntimkiemthe;
    private javax.swing.JButton btnxoadocgia;
    private javax.swing.JButton btnxoaqlmuontra;
    private javax.swing.JButton btnxoasach;
    private javax.swing.JButton btnxoathe;
    private javax.swing.ButtonGroup buttonGroupQLDocGia;
    private javax.swing.ButtonGroup buttonGroupQLMuonTraSach;
    private javax.swing.ButtonGroup buttonGroupQLSach;
    private javax.swing.ButtonGroup buttonGroupQLThe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblsosachmuon;
    private javax.swing.JLabel lblsosachtra;
    private javax.swing.JLabel lblthongkesachmuonnhieu;
    private javax.swing.JLabel lbltongsosach;
    private javax.swing.JLabel lbsoluongsachtheotheloai;
    private javax.swing.JLabel lbtongslsach;
    private javax.swing.JRadioButton rbgia;
    private javax.swing.JRadioButton rbhoten;
    private javax.swing.JRadioButton rbhotenthe;
    private javax.swing.JRadioButton rbiddocgia;
    private javax.swing.JRadioButton rbiddocgiaqlmuontra;
    private javax.swing.JRadioButton rbidsach;
    private javax.swing.JRadioButton rbidsachqlmuontra;
    private javax.swing.JRadioButton rbidsachvaiddocgiaqlmuontra;
    private javax.swing.JRadioButton rbidthe;
    private javax.swing.JRadioButton rbsdt;
    private javax.swing.JRadioButton rbtacgia;
    private javax.swing.JRadioButton rbtensach;
    private javax.swing.JRadioButton rbtheloai;
    private javax.swing.JRadioButton rbvitri;
    private javax.swing.JTable tbdocgia;
    private javax.swing.JTable tbmuontra;
    private javax.swing.JTable tbmuontrasachcopy;
    private javax.swing.JTable tbsach;
    private javax.swing.JTable tbthe;
    private javax.swing.JTable tbthongkedocgia;
    private javax.swing.JTable tbthongkesach;
    private javax.swing.JTextField txtdenngay;
    private javax.swing.JTextField txtdiachi;
    private javax.swing.JTextField txtgiasach;
    private javax.swing.JTextField txthethan;
    private javax.swing.JTextField txthoten;
    private javax.swing.JTextField txthotenqlmuontra;
    private javax.swing.JTextField txthotenthe;
    private javax.swing.JTextField txtiddocgia;
    private javax.swing.JTextField txtiddocgiaqlmuontra;
    private javax.swing.JTextField txtidsach;
    private javax.swing.JTextField txtidsachqlmuontra;
    private javax.swing.JTextField txtidthe;
    private javax.swing.JTextField txtngaycap;
    private javax.swing.JTextField txtngayhentra;
    private javax.swing.JTextField txtngaymuon;
    private javax.swing.JTextField txtngaysinh;
    private javax.swing.JTextField txtngaythuctra;
    private javax.swing.JTextField txtnghenghiep;
    private javax.swing.JTextField txtnxb;
    private javax.swing.JTextField txtsdt;
    private javax.swing.JTextField txtsoluong;
    private javax.swing.JTextField txttacgia;
    private javax.swing.JTextField txttensach;
    private javax.swing.JTextField txttensachqlmuontra;
    private javax.swing.JTextField txttheloai;
    private javax.swing.JTextField txttheloaithongkesach;
    private javax.swing.JTextField txttungay;
    private javax.swing.JTextField txtvitri;
    // End of variables declaration//GEN-END:variables
}
